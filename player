src/menu.cpp:        if (curop->press_func[button] != NULL && inputsys->Pressed((Button)button)){
src/game.cpp:  p[0]->joystick = app->inputsys->p1;
src/game.cpp:  p[1]->joystick = app->inputsys->p2;
src/charactermenu.cpp:  drawsys->draw(inputsys->p1->getPlacard(0));
src/charactermenu.cpp:  drawsys->draw(inputsys->p2->getPlacard(1));
src/charactermenu.cpp:  drawsys->draw(inputsys->p1->getNamePlacard(0));
src/charactermenu.cpp:  drawsys->draw(inputsys->p2->getNamePlacard(1));
src/charactermenu.cpp:        if (curop->press_func[button] != NULL && inputsys->Pressed((Button)button)){
src/charactermenu.cpp:  if (inputsys->Pressed(bMK)){
src/application.cpp:  inputsys->p1 = game->p[0];
src/application.cpp:  inputsys->p2 = game->p[1];
src/application.cpp:  inputsys->update();
src/selectmenu.cpp:  vector<Joystick*> sticks = inputsys->getJoysticks();
src/selectmenu.cpp:  joysticks = inputsys->getJoysticks();
src/selectmenu.cpp:  if (inputsys->Pressed(bMK)){
src/selectmenu.cpp:  if (inputsys->Pressed(bLEFT, curjoy)){
src/selectmenu.cpp:    if (curjoy == inputsys->p2->joystick){
src/selectmenu.cpp:      inputsys->clearP(curjoy);
src/selectmenu.cpp:      inputsys->setP1(curjoy);
src/selectmenu.cpp:  } else if (inputsys->Pressed(bRIGHT, curjoy)){
src/selectmenu.cpp:    if (curjoy == inputsys->p1->joystick){
src/selectmenu.cpp:      inputsys->clearP(curjoy);
src/selectmenu.cpp:      inputsys->setP2(curjoy);
src/selectmenu.cpp:  if (inputsys->Pressed(bLK)){
src/optionsmenu.cpp:        if (curop->press_func[button] != NULL && inputsys->Pressed((Button)button)){
